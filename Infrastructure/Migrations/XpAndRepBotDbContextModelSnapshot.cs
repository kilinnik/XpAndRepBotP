// <auto-generated />

#nullable disable

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(XpAndRepBotDbContext))]
    partial class XpAndRepBotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Chat", b =>
                {
                    b.Property<long>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ChatId"));

                    b.Property<string>("Greeting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelpAdminCommands")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelpCommands")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rules")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarnDays")
                        .HasColumnType("int");

                    b.HasKey("ChatId");

                    b.HasIndex("ChatId")
                        .HasDatabaseName("Index_ChatId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Domain.Models.DeletableMessage", b =>
                {
                    b.Property<long>("FirstMessageId")
                        .HasColumnType("bigint");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("MessageIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FirstMessageId", "ChatId");

                    b.HasIndex("ChatId");

                    b.ToTable("DeletableMessages");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<long>("BestTime")
                        .HasColumnType("bigint");

                    b.Property<string>("ComplainerList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplaintList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountRepeatMessage")
                        .HasColumnType("int");

                    b.Property<int>("CurrentExperience")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateMarriage")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateMute")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntryChecked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNfcActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastMessageTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<long>("Marriage")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reputation")
                        .HasColumnType("int");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartNfc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Warns")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ChatId");

                    b.HasIndex("ChatId");

                    b.HasIndex("Reputation")
                        .HasDatabaseName("Index_Reputation");

                    b.HasIndex("Level", "CurrentExperience")
                        .HasDatabaseName("Index_Level_CurrentExperience");

                    b.HasIndex("UserId", "ChatId")
                        .HasDatabaseName("Index_UserId_ChatId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.UserWord", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WordCount")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ChatId");

                    b.HasIndex("ChatId");

                    b.HasIndex("Word")
                        .HasDatabaseName("Index_UserWord_Word");

                    b.HasIndex("UserId", "ChatId")
                        .HasDatabaseName("Index_UserWord_UserId_ChatId");

                    b.ToTable("UserWords");
                });

            modelBuilder.Entity("Domain.Models.DeletableMessage", b =>
                {
                    b.HasOne("Domain.Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.HasOne("Domain.Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("Domain.Models.UserWord", b =>
                {
                    b.HasOne("Domain.Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });
#pragma warning restore 612, 618
        }
    }
}
